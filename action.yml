name: actions/prepare-ssh
description: Configure SSH private key and Know hosts

inputs:
  private_key:
    description: "SSH Private Key"
    required: true
    default: ""
  known_hosts_json_file:
    description: "Preload SSH Known Hosts from this JSON file"
    required: false
    default: ""
  known_hosts_json_file_jq_query:
    description: "jq filters/query to extract hosts from the JSON file e.g. '.hosts[].host'"
    required: false
    default: ".hosts[].host"

runs:
  using: composite
  steps:
    - name: ðŸ”‘ Set Private Key (~/.ssh/id_runner)
      shell: sh
      run: |
        set -euo pipefail
        mkdir -p ~/.ssh
        printf '%s\n' "$private_key" > ~/.ssh/id_runner
        chmod 600 ~/.ssh/id_runner
        echo "SSH key written to ~/.ssh/id_runner"

    - name: Preload Known Hosts for specified JSON file using ssh-keyscan
      shell: sh
      if: ${{ inputs.known_hosts_json_file != '' }}
      run: |
        set -euo pipefail

        if [ -f ${{ inputs.known_hosts_json_file }} ] && command -v jq >/dev/null 2>&1; then
          
          mkdir -p ~/.ssh

          # if a deployment has auto_update_on_main_branch_commit set to false, it is ignored.
          jq -r '.[] | select((.auto_update_on_main_branch_commit? == null) or (.auto_update_on_main_branch_commit? == false)) | ${{ inputs.known_hosts_json_file_jq_query }} // empty' ${{ inputs.known_hosts_json_file }} |
            sort -u |
            while read -r h; do
              [ -z "$h" ] && continue
              ssh-keyscan -H "$h" >>~/.ssh/known_hosts 2>/dev/null || true
            done

          chmod 644 ~/.ssh/known_hosts || true

        else
          echo "No valid JSON file found at ${{ inputs.known_hosts_json_file }} or jq is not installed, skipping known_hosts setup"
          exit 0
        fi
